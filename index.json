[{"authors":["admin"],"categories":null,"content":"I am currently a business analytics master’s student at UCSD Rady School of Management. In 2019, I co-founded Chlorinie, a boutique manufacturer and marketer of HCIO-based disinfectants, where I served as the Chief Marketing Officer. My experience focused on product development and turning user data analytics into actionable business decisions. Prior to Chlorinie, I attained her bachelor’s degree in Arts at Smith College and has worked as lead marketing business analyst and product analyst at two emerging start-ups in Hangzhou, China. I am currently looking for a 2020 new grad data analyst position.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"http://mia521.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am currently a business analytics master’s student at UCSD Rady School of Management. In 2019, I co-founded Chlorinie, a boutique manufacturer and marketer of HCIO-based disinfectants, where I served as the Chief Marketing Officer. My experience focused on product development and turning user data analytics into actionable business decisions. Prior to Chlorinie, I attained her bachelor’s degree in Arts at Smith College and has worked as lead marketing business analyst and product analyst at two emerging start-ups in Hangzhou, China.","tags":null,"title":"Chengsheng Wu","type":"authors"},{"authors":[],"categories":[],"content":" Start by loading the bbb.rds data into Radiant using the Data \u0026gt; Manage tab. Then press the report icon  icon on the bottom-left of the screen to add the relevant R-code to Report \u0026gt; Rmd.\n## load the original tibble from data/bbb.rds bbb_file \u0026lt;- tempfile() curl::curl_download( \u0026quot;https://www.dropbox.com/s/i6athvk5m4t822m/bbb.rds?dl=1\u0026quot;, destfile = bbb_file ) bbb \u0026lt;- readr::read_rds(bbb_file)  Assessing recency Create a bar-plot using buyer as the Y-variable and last as the X-variable.\nvisualize( bbb, xvar = \u0026quot;last\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;months since last purchase (last)\u0026quot; ), custom = FALSE )  Plot a histogram of the last variable (set plot type to “distribution”)\nvisualize(bbb, xvar = \u0026quot;last\u0026quot;, type = \u0026quot;dist\u0026quot;, custom = FALSE)  Create the recency variable rec_iq using the following command in Data \u0026gt; Transform \u0026gt; Create:\nrec_iq = xtile(last, 5)\n## create recency quintiles bbb \u0026lt;- mutate(bbb, rec_iq = xtile(last, 5))  Is recency predictive of purchase? Are the best customers in quintile 1? The graph below shows this is indeed the case.\nvisualize( bbb, xvar = \u0026quot;rec_iq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;Recency quintiles (rec_iq)\u0026quot; ), custom = FALSE )  Assessing frequency The plot below shows that purchase probability is NOT highest in the 1st quantile for frequency (purch).\nvisualize( bbb, xvar = \u0026quot;purch\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;Purchase frequency (purch)\u0026quot; ), custom = FALSE )  This means we need to flip the bin numbers so the highest purchase probability will bin in the 1st bin (quantile). The easiest way to do this is to add rev = TRUE in the call to xtile.\nfreq_iq = xtile(purch, 5, rev = TRUE)\nAlternatively, you could use:\nfreq_iq = 6L - xtile(purch, 5)\n## create frequency quintiles bbb \u0026lt;- mutate(bbb, freq_iq = xtile(purch, 5, rev = TRUE))  Is frequency predictive of purchase? Are the best customers in quintile 1? The graph below shows this is now indeed the case.\nvisualize( bbb, xvar = \u0026quot;freq_iq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;Frequency quintiles (freq_iq)\u0026quot; ), custom = FALSE )  Why are there only 4 values? Looking at the histogram below we see that the distribution of purch is heavily skewed (to the right). This makes it difficult for the binning algorithm to create 5 bins of similar size\nvisualize(bbb, xvar = \u0026quot;purch\u0026quot;, color = \u0026quot;freq_iq\u0026quot;)  Assessing monetary value The plot shows that purchase probability will NOT be highest in the 1st monetary quantile (total)\nvisualize( bbb, xvar = \u0026quot;total\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;Monetary value (total)\u0026quot; ), custom = TRUE ) + theme( axis.ticks.x = element_blank(), axis.text.x = element_blank() )  Plot a histogram of the total variable\nvisualize(bbb, xvar = \u0026quot;total\u0026quot;, type = \u0026quot;dist\u0026quot;, custom = FALSE)  Just like we did for frequency, we have to flip the bins so the highest purchase probability is in the 1st quantile. The easiest way to do this is to add rev = TRUE in the call to xtile.\nmon_iq = xtile(total, 5, rev = TRUE)\n## create monetary quintiles bbb \u0026lt;- mutate(bbb, mon_iq = xtile(total, 5, rev = TRUE))  Is monetary predictive of purchase? Are the best customers in quintile 1? The graph below shows this is now indeed the case.\nvisualize( bbb, xvar = \u0026quot;mon_iq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;Monetary value quantiles (mon_iq)\u0026quot; ), custom = FALSE )  Correlation between RFM variables What is the correlation between last, total, and purch?\nresult \u0026lt;- correlation(bbb, vars = c(\u0026quot;last\u0026quot;, \u0026quot;total\u0026quot;, \u0026quot;purch\u0026quot;)) summary(result) Correlation Data : bbb Method : Pearson Variables : last, total, purch Null hyp. : variables x and y are not correlated Alt. hyp. : variables x and y are correlated Correlation matrix: last total total -0.00 purch 0.01 0.52 p.values: last total total 0.67 purch 0.18 0.00 plot(result, n = 1000)  Create a new variable that captures the average amount spent per purchase (avg_total).\n## calculate average spend bbb \u0026lt;- mutate(bbb, avg_total = total / purch) visualize( bbb, xvar = \u0026quot;purch\u0026quot;, yvar = \u0026quot;avg_total\u0026quot;, type = \u0026quot;bar\u0026quot;, custom = FALSE )  What is the correlation between purch and avg_total?\nresult \u0026lt;- correlation( bbb, vars = c(\u0026quot;last\u0026quot;, \u0026quot;total\u0026quot;, \u0026quot;purch\u0026quot;, \u0026quot;avg_total\u0026quot;) ) summary(result) Correlation Data : bbb Method : Pearson Variables : last, total, purch, avg_total Null hyp. : variables x and y are not correlated Alt. hyp. : variables x and y are correlated Correlation matrix: last total purch total -0.00 purch 0.01 0.52 avg_total -0.01 0.21 -0.57 p.values: last total purch total 0.67 purch 0.18 0.00 avg_total 0.05 0.00 0.00 plot(result, n = 1000)  Generate RFM index Use Data \u0026gt; Transform \u0026gt; Create to generate the RFM index by pasting rec_iq, freq_iq, and mon_iq together.\nrfm_iq = paste0(rec_iq, freq_iq, mon_iq)\n## create new variable(s) bbb \u0026lt;- mutate(bbb, rfm_iq = paste0(rec_iq, freq_iq, mon_iq)) visualize( bbb, xvar = \u0026quot;rfm_iq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyer = 'yes'\u0026quot;, x = \u0026quot;Independent RFM index (rfm_iq)\u0026quot; ), custom = TRUE ) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  Generate sequential quintiles There is no need to do anything with recency for a sequential quintiles approach because rec_iq is the same as rec_sq. However, to calculate freq_sq we first need to group the data by rec_iq before applying the xtile function. Subsequently, we need to group the data by rec_iq and freq_sq before applying the xtile function to calculate mon_sq\n## calculate sequential frequency quintiles bbb \u0026lt;- group_by(bbb, rec_iq) %\u0026gt;% mutate(freq_sq = xtile(purch, 5, rev = TRUE)) %\u0026gt;% ungroup() ## calculate sequential monetary quintiles bbb \u0026lt;- group_by(bbb, rec_iq, freq_sq) %\u0026gt;% mutate(mon_sq = xtile(total, 5, rev = TRUE)) %\u0026gt;% ungroup() visualize( bbb, xvar = \u0026quot;freq_sq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;Frequency quintiles (freq_sq)\u0026quot; ), custom = FALSE )  visualize( bbb, xvar = \u0026quot;mon_sq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyers = 'yes'\u0026quot;, x = \u0026quot;Monetary value quintiles (mon_sq)\u0026quot; ), custom = FALSE )  Generate Sequential RFM index Use Data \u0026gt; Transform \u0026gt; Create to generate the RFM index by pasting rec_iq, freq_sq, and mon_sq together.\nrfm_sq = paste0(rec_iq, freq_sq, mon_sq)\n## create new variable(s) bbb \u0026lt;- mutate(bbb, rfm_sq = paste0(rec_iq, freq_sq, mon_sq)) visualize( bbb, xvar = \u0026quot;rfm_sq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyer = 'yes'\u0026quot;, x = \u0026quot;Sequential RFM index (rfm_sq)\u0026quot; ), custom = TRUE ) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  Calculate performance metrics without targeting Response rate without RFM We can use Data \u0026gt; Explore to generate summary statistics for the buyer variable in the sample\nresult \u0026lt;- explore( bbb, vars = \u0026quot;buyer\u0026quot;, fun = c(\u0026quot;n_obs\u0026quot;, \u0026quot;mean\u0026quot;) ) summary(result, dec = 4) Explore Data : bbb Functions : n_obs, mean Top : Function variable n_obs mean buyer 50,000 0.0904  Some basic R-code is needed to to calculate performance metrics for BBB when no targeting is used. We are now using R as a calculator.\nperc_mail \u0026lt;- 1 nr_mail \u0026lt;- 500000 * perc_mail rep_rate \u0026lt;- mean(bbb$buyer == \u0026quot;yes\u0026quot;) nr_resp \u0026lt;- nr_mail * rep_rate mail_cost \u0026lt;- .5 * nr_mail profit_nt \u0026lt;- (18 - 9 - 3) * nr_resp - mail_cost ROME_nt \u0026lt;- profit_nt / mail_cost  Without targeting BBB would mail all 500,000 remaining customers (100.00%). The response rate is predicted to be 9.04% or 45,220 buyers. The expected profit is $21,320. The mailing cost is estimated to be $250,000 with a ROME of 8.53%\nCalculate performance metrics using independent RFM Break-even (aggr) We can calcule the break-even response rate as follows:\n.5 / (18 - 9 - 3) = 0.0833333\nThe breakeven value is 8.3%. All cells above the breakeven line in the plot below should be mailed.\nvisualize( bbb, xvar = \u0026quot;rfm_iq\u0026quot;, yvar = \u0026quot;buyer\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list( y = \u0026quot;Proportion of buyer = 'yes'\u0026quot;, x = \u0026quot;Independent RFM index (rfm_iq)\u0026quot; ), custom = TRUE ) + geom_hline(yintercept = 0.083) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  Response rate using independent quintiles Create the mailto_iq variable for independent RFM making sure to select the rfm_iq variable so the estimates are generated for each cell.\nmailto_iq = mean(buyer == \u0026quot;yes\u0026quot;) \u0026gt; .083\n## mail TRUE or FALSE bbb \u0026lt;- group_by(bbb, rfm_iq) %\u0026gt;% mutate(mailto_iq = mean(buyer == \u0026quot;yes\u0026quot;) \u0026gt; breakeven) %\u0026gt;% ungroup() ## also calculate response rate per group as an illustration bbb \u0026lt;- group_by(bbb, rfm_iq) %\u0026gt;% mutate(rfm_iq_resp = mean(buyer == \u0026quot;yes\u0026quot;)) %\u0026gt;% ungroup() result \u0026lt;- pivotr( bbb, cvars = \u0026quot;mailto_iq\u0026quot;, fun = \u0026quot;n_obs\u0026quot;, normalize = \u0026quot;total\u0026quot; ) summary(result, dec = 2, perc = TRUE) Pivot table Data : bbb Categorical : mailto_iq Normalize by: total mailto_iq n_obs FALSE 53.46% TRUE 46.54% Total 100.00% result \u0026lt;- explore( bbb, vars = \u0026quot;buyer\u0026quot;, byvar = \u0026quot;mailto_iq\u0026quot;, fun = c(\u0026quot;n_obs\u0026quot;, \u0026quot;mean\u0026quot;) ) summary(result, dec = 4) Explore Data : bbb Grouped by : mailto_iq Functions : n_obs, mean Top : Function mailto_iq variable n_obs mean FALSE buyer 26,732 0.0468 TRUE buyer 23,268 0.1405  Calculate profits and ROME for Independent RFM Some basic R-code is again needed to to calculate performance metrics for BBB when targeting using independent RFM. The only difference with the calculations above is that we now also have calculate the percentage of customers that will be mailed rather than setting equal to 100%.\nperc_mail \u0026lt;- mean(bbb$mailto_iq) nr_mail \u0026lt;- 500000 * perc_mail dat \u0026lt;- filter(bbb, mailto_iq == TRUE) rep_rate \u0026lt;- mean(dat$buyer == \u0026quot;yes\u0026quot;) nr_resp \u0026lt;- nr_mail * rep_rate mail_cost \u0026lt;- .5 * nr_mail profit_iq \u0026lt;- (18 - 9 - 3) * nr_resp - mail_cost ROME_iq \u0026lt;- profit_iq / mail_cost  Based on independent RFM the number of customers BBB should mail is 232,680 (46.54%). The response rate for the selected customers is predicted to be 14.05% or 32,700 buyers. The expected profit is $79,860. The mailing cost is estimated to be $116,340 with a ROME of 68.64%\nResponse rate using sequential quintiles Create the mailto_sq variable for sequential RFM making sure to select the rfm_sq variable so the estimates are generated for each cell.\nmailto_sq = mean(buyer == \u0026quot;yes\u0026quot;) \u0026gt; .083\n## mail TRUE or FALSE bbb \u0026lt;- group_by(bbb, rfm_sq) %\u0026gt;% mutate(mailto_sq = mean(buyer == \u0026quot;yes\u0026quot;) \u0026gt; breakeven) %\u0026gt;% ungroup() ## also calculate response rate per group as an illustration bbb \u0026lt;- group_by(bbb, rfm_sq) %\u0026gt;% mutate(rfm_sq_resp = mean(buyer == \u0026quot;yes\u0026quot;)) %\u0026gt;% ungroup() result \u0026lt;- pivotr(bbb, cvars = \u0026quot;mailto_sq\u0026quot;, fun = \u0026quot;n_obs\u0026quot;, normalize = \u0026quot;total\u0026quot;) summary(result, dec = 2, perc = TRUE) Pivot table Data : bbb Categorical : mailto_sq Normalize by: total mailto_sq n_obs FALSE 52.59% TRUE 47.41% Total 100.00% result \u0026lt;- explore( bbb, vars = \u0026quot;buyer\u0026quot;, byvar = \u0026quot;mailto_sq\u0026quot;, fun = c(\u0026quot;n_obs\u0026quot;, \u0026quot;mean\u0026quot;) ) summary(result, dec = 4) Explore Data : bbb Grouped by : mailto_sq Functions : n_obs, mean Top : Function mailto_sq variable n_obs mean FALSE buyer 26,297 0.0460 TRUE buyer 23,703 0.1397  Calculate profits and ROME using Sequential RFM perc_mail \u0026lt;- mean(bbb$mailto_sq) nr_mail \u0026lt;- 500000 * perc_mail dat \u0026lt;- filter(bbb, mailto_sq == TRUE) rep_rate \u0026lt;- mean(dat$buyer == \u0026quot;yes\u0026quot;) nr_resp \u0026lt;- nr_mail * rep_rate mail_cost \u0026lt;- .5 * nr_mail profit_sq \u0026lt;- (18 - 9 - 3) * nr_resp - mail_cost ROME_sq \u0026lt;- profit_sq / mail_cost  Based on sequential RFM the number of customers BBB should mail is 237,030 (47.41%). The response rate for the selected customers is predicted to be 13.97% or 33,120 buyers. The expected profit is $80,205. The mailing cost is estimated to be $118,515 with a ROME of 67.67%.\nCompare this to the main results from independent RFM. The expected profit is $79,860. The mailing cost is estimated to be $118,515 with a ROME of 68.64%\nExtra: Intuitive groupings Generate the RFM variables based on intuitive groupings.\n## create recency groups using case_when bbb \u0026lt;- mutate( bbb, rec_ig = case_when( last \u0026lt;= 6 ~ 1, last \u0026gt; 6 \u0026amp; last \u0026lt;= 12 ~ 2, last \u0026gt; 12 \u0026amp; last \u0026lt;= 18 ~ 3, last \u0026gt; 18 \u0026amp; last \u0026lt;= 24 ~ 4, TRUE ~ 5 ) ) ## create frequency groups bbb \u0026lt;- mutate(bbb, freq_ig = ifelse(purch == 1, 2, 1)) ## create monetary groups bbb \u0026lt;- mutate(bbb, mon_ig = ifelse(total \u0026lt; median(total), 2, 1)) ## change all _iq variables to type {integer} using _Data \u0026gt; Transform \u0026gt; Change type_ bbb \u0026lt;- mutate_at( bbb, .vars = vars(rec_ig, freq_ig, mon_ig), .funs = as_integer ) ## create new variable(s) bbb \u0026lt;- mutate(bbb, rfm_ig = paste0(rec_ig, freq_ig, mon_ig))  Create the mailto_ig variable for RFM based on intuitive groupings and make sure to select the rfm_ig variable so the estimates are generated for each cell.\n## mail TRUE or FALSE bbb \u0026lt;- group_by(bbb, rfm_ig) %\u0026gt;% mutate(mailto_ig = mean(buyer == \u0026quot;yes\u0026quot;) \u0026gt; breakeven) %\u0026gt;% ungroup() perc_mail \u0026lt;- mean(bbb$mailto_ig) nr_mail \u0026lt;- 500000 * perc_mail dat \u0026lt;- filter(bbb, mailto_ig == TRUE) rep_rate \u0026lt;- mean(dat$buyer == \u0026quot;yes\u0026quot;) nr_resp \u0026lt;- nr_mail * rep_rate mail_cost \u0026lt;- .5 * nr_mail profit_ig \u0026lt;- (18 - 9 - 3) * nr_resp - mail_cost ROME_ig \u0026lt;- profit_ig / mail_cost  Based on intuitively grouped RFM the number of customers BBB should mail is 276,660 (55.33%). The response rate for the selected customers is predicted to be 12.69% or 35,100 buyers. The expected profit is $72,270. The mailing cost is estimated to be $138,330 with a ROME of 52.24%.\nExtra: Graphing Profit and ROME across methods ## make a tibble (data.frame) with results dat \u0026lt;- tibble::tibble( name = c(\u0026quot;No targeting\u0026quot;, \u0026quot;Indep. RFM\u0026quot;, \u0026quot;Sequen. RFM\u0026quot;, \u0026quot;Intuit. RFM\u0026quot;), Profit = c(profit_nt, profit_iq, profit_sq, profit_ig), ROME = c(ROME_nt, ROME_iq, ROME_sq, ROME_ig) ) %\u0026gt;% mutate(name = factor(name, levels = name)) ## plot campaign profit visualize( dat, xvar = \u0026quot;name\u0026quot;, yvar = \u0026quot;Profit\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list(title = \u0026quot;Campaign profit\u0026quot;, x = \u0026quot;\u0026quot;), custom = TRUE ) + geom_text(aes(label = format_nr(Profit, dec = 0)), vjust = 2)  ## plot ROME visualize( dat, xvar = \u0026quot;name\u0026quot;, yvar = \u0026quot;ROME\u0026quot;, type = \u0026quot;bar\u0026quot;, labs = list(title = \u0026quot;Return on Marketing Expenditures (ROME)\u0026quot;, x = \u0026quot;\u0026quot;), custom = TRUE ) + geom_text(aes(label = format_nr(ROME, dec = 2)), vjust = 2)  Extra: Refining the break even rule with prediction precision based on Independent quintiles We want to establish that the estimated response rates per RFM cell are significantly larger than the break-even response rate. Lets start with a test of the proportion of buyers in RFM group 111.\nresult \u0026lt;- single_prop( bbb, var = \u0026quot;buyer\u0026quot;, lev = \u0026quot;yes\u0026quot;, comp_value = 0.083, alternative = \u0026quot;greater\u0026quot;, data_filter = \u0026quot;rfm_iq == '111'\u0026quot; ) summary(result) Single proportion test (binomial exact) Data : bbb Filter : rfm_iq == '111' Variable : buyer Level : yes in buyer Confidence: 0.95 Null hyp. : the proportion of yes in buyer = 0.083 Alt. hyp. : the proportion of yes in buyer \u0026gt; 0.083 p ns n n_missing sd se me 0.225 264 1,171 0 0.418 0.012 0.024 diff ns p.value 5% 100% 0.142 264 \u0026lt; .001 0.205 1.000 *** Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  The results show that we can reject H0 in favor of the alternative hypothesis that the proportion of buyers in this group in the population will be above the break-even response rate.\nRecall that the “worst” cell we would still target was index 253 for rfm_iq. This group had a sample response rate of 0.085. The test below shows that we cannot reject H0 for this group.\nresult \u0026lt;- single_prop( bbb, var = \u0026quot;buyer\u0026quot;, lev = \u0026quot;yes\u0026quot;, comp_value = 0.083, alternative = \u0026quot;greater\u0026quot;, data_filter = \u0026quot;rfm_iq == '253'\u0026quot; ) summary(result) Single proportion test (binomial exact) Data : bbb Filter : rfm_iq == '253' Variable : buyer Level : yes in buyer Confidence: 0.95 Null hyp. : the proportion of yes in buyer = 0.083 Alt. hyp. : the proportion of yes in buyer \u0026gt; 0.083 p ns n n_missing sd se me 0.085 52 609 0 0.279 0.011 0.022 diff ns p.value 5% 100% 0.002 52 0.436 0.067 1.000 Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  We can generate the required inputs to calculate the lower-bound on the response rate for each cell using Data \u0026gt; Explore as follows:\nresult \u0026lt;- explore( bbb, vars = \u0026quot;buyer\u0026quot;, byvar = \u0026quot;rfm_iq\u0026quot;, fun = c(\u0026quot;n_obs\u0026quot;, \u0026quot;prop\u0026quot;, \u0026quot;seprop\u0026quot;), nr = 95 ) dtab(result, dec = 4) %\u0026gt;% render()  bbb_lbiq \u0026lt;- result$tab register(\u0026quot;bbb_lbiq\u0026quot;)  Then we can use Data \u0026gt; Transform to calculate the lower-bound on the response rate\nPut simply, the standard error of the sample mean is an estimate of how far the sample mean is likely to be from the population mean, whereas the standard deviation of the sample is the degree to which individuals within the sample differ from the sample mean.\n## create lower-bound bbb_lbiq \u0026lt;- mutate(bbb_lbiq, prop_lb = prop - 1.64 * seprop)  The figure below shows instances where the lower-bound of the confidence interval around the response rate for a cell is below the break-even cut-off point although the sample response rate is above the cut-off point.\nvisualize( bbb_lbiq, xvar = \u0026quot;rfm_iq\u0026quot;, yvar = c(\u0026quot;prop\u0026quot;, \u0026quot;prop_lb\u0026quot;), comby = TRUE, type = \u0026quot;line\u0026quot;, labs = list( y = \u0026quot;Proportion of buyer = 'yes'\u0026quot;, x = \u0026quot;Independent RFM index (rfm_iq)\u0026quot;, color = \u0026quot;\u0026quot; ), custom = TRUE ) + geom_hline(yintercept = 0.083) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  Create the mailto_lbiq variable for independent RFM adjusting for estimation accuracy making sure to select the rfm_iq variable so the estimates are generated for each cell.\nmailto_lbiq = (mean(buyer == \u0026quot;yes\u0026quot;) - 1.64 * seprop(buyer == \u0026quot;yes\u0026quot;)) \u0026gt; .083 ## mail TRUE or FALSE bbb \u0026lt;- group_by(bbb, rfm_iq) %\u0026gt;% mutate(mailto_lbiq = (mean(buyer == \u0026quot;yes\u0026quot;) - 1.64 * seprop(buyer == \u0026quot;yes\u0026quot;)) \u0026gt; 0.083) %\u0026gt;% ungroup()  The rest of the calculations are the same as before.\nperc_mail \u0026lt;- mean(bbb$mailto_lbiq) nr_mail \u0026lt;- 500000 * perc_mail dat \u0026lt;- filter(bbb, mailto_lbiq == TRUE) rep_rate \u0026lt;- mean(dat$buyer == \u0026quot;yes\u0026quot;) nr_resp \u0026lt;- nr_mail * rep_rate mail_cost \u0026lt;- .5 * nr_mail profit_lbiq \u0026lt;- (18 - 9 - 3) * nr_resp - mail_cost ROME_lbiq \u0026lt;- profit_lbiq / mail_cost  Based on independent RFM, after adjustment for prediction precision, the number of customers BBB should mail is 183,940 (36.79%). The response rate for the selected customers is predicted to be 15.30% or 28,150 buyers. The expected profit is $76,930. The mailing cost is estimated to be $91,970 with a ROME of 83.65%.\nExtra: Refining the break even rule with prediction precision based on Sequential quintiles We want to establish that the estimated response rates per RFM cell are significantly larger than the break-even response rate. Lets start with a test of the proportion of buyers in RFM group 111.\nresult \u0026lt;- single_prop( bbb, var = \u0026quot;buyer\u0026quot;, lev = \u0026quot;yes\u0026quot;, comp_value = 0.083, alternative = \u0026quot;greater\u0026quot;, data_filter = \u0026quot;rfm_sq == '111'\u0026quot; ) summary(result) Single proportion test (binomial exact) Data : bbb Filter : rfm_sq == '111' Variable : buyer Level : yes in buyer Confidence: 0.95 Null hyp. : the proportion of yes in buyer = 0.083 Alt. hyp. : the proportion of yes in buyer \u0026gt; 0.083 p ns n n_missing sd se me 0.245 88 359 0 0.430 0.023 0.044 diff ns p.value 5% 100% 0.162 88 \u0026lt; .001 0.208 1.000 *** Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  The results show that we can reject H0 in favor of the alternative hypothesis that the proportion of buyers in this group in the population will be above the break-even response rate.\nRecall that the “worst” groups we would still send to was index 323 for rfm_sq. This group had a sample response rate of 0.085. The test below shows that we cannot reject H0 for this group.\nresult \u0026lt;- single_prop( bbb, var = \u0026quot;buyer\u0026quot;, lev = \u0026quot;yes\u0026quot;, comp_value = 0.083, alternative = \u0026quot;greater\u0026quot;, data_filter = \u0026quot;rfm_sq == '323'\u0026quot; ) summary(result) Single proportion test (binomial exact) Data : bbb Filter : rfm_sq == '323' Variable : buyer Level : yes in buyer Confidence: 0.95 Null hyp. : the proportion of yes in buyer = 0.083 Alt. hyp. : the proportion of yes in buyer \u0026gt; 0.083 p ns n n_missing sd se me 0.085 42 493 0 0.279 0.013 0.025 diff ns p.value 5% 100% 0.002 42 0.453 0.065 1.000 Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  We can generate the required inputs to calculate the lower-bound on the response rate for each cell using Data \u0026gt; Explore as follows:\nresult \u0026lt;- explore( bbb, vars = \u0026quot;buyer\u0026quot;, byvar = \u0026quot;rfm_sq\u0026quot;, fun = c(\u0026quot;n_obs\u0026quot;, \u0026quot;prop\u0026quot;, \u0026quot;seprop\u0026quot;), nr = 95 ) dtab(result, dec = 4) %\u0026gt;% render()  bbb_lbsq \u0026lt;- result$tab register(\u0026quot;bbb_lbsq\u0026quot;)  Then we can use Data \u0026gt; Transform to calculate the lower-bound on the response rate\n## create lower-bound bbb_lbsq \u0026lt;- mutate(bbb_lbsq, prop_lb = prop - 1.64 * seprop)  The figure below shows instances where the lower-bound of the confidence interval around the response rate for a cell is below the break-even cut-off point although the sample response rate is above the cut-off point.\nvisualize( bbb_lbsq, xvar = \u0026quot;rfm_sq\u0026quot;, yvar = c(\u0026quot;prop\u0026quot;, \u0026quot;prop_lb\u0026quot;), comby = TRUE, type = \u0026quot;line\u0026quot;, labs = list( y = \u0026quot;Proportion of buyer = 'yes'\u0026quot;, x = \u0026quot;Sequential RFM index (rfm_sq)\u0026quot;, color = \u0026quot;\u0026quot; ), custom = TRUE ) + geom_hline(yintercept = 0.083) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  Create the mailto_lbsq variable for sequential RFM adjusting for estimation accuracy making sure to select the rfm_sq variable so the estimates are generated for each cell.\n","date":1584165313,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584165313,"objectID":"02a20bd49c561cf3f2a1a8903c639bba","permalink":"http://mia521.github.io/project/rfm-for-bookbinders/","publishdate":"2020-03-13T22:55:13-07:00","relpermalink":"/project/rfm-for-bookbinders/","section":"project","summary":"Start by loading the bbb.rds data into Radiant using the Data \u0026gt; Manage tab. Then press the report icon  icon on the bottom-left of the screen to add the relevant R-code to Report \u0026gt; Rmd.\n## load the original tibble from data/bbb.rds bbb_file \u0026lt;- tempfile() curl::curl_download( \u0026quot;https://www.dropbox.com/s/i6athvk5m4t822m/bbb.rds?dl=1\u0026quot;, destfile = bbb_file ) bbb \u0026lt;- readr::read_rds(bbb_file)  Assessing recency Create a bar-plot using buyer as the Y-variable and last as the X-variable.","tags":[],"title":"RFM for Bookbinders","type":"project"}]