<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | Chengsheng Wu</title>
    <link>http://mia521.github.io/project/</link>
      <atom:link href="http://mia521.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 13 Mar 2020 22:55:13 -0700</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Projects</title>
      <link>http://mia521.github.io/project/</link>
    </image>
    
    <item>
      <title>RFM for Bookbinders</title>
      <link>http://mia521.github.io/project/rfm-for-bookbinders/</link>
      <pubDate>Fri, 13 Mar 2020 22:55:13 -0700</pubDate>
      <guid>http://mia521.github.io/project/rfm-for-bookbinders/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Start by loading the &lt;code&gt;bbb.rds&lt;/code&gt; data into Radiant using the &lt;em&gt;Data &amp;gt;
Manage&lt;/em&gt; tab. Then press the report icon
&lt;i title=&#39;Report results&#39; class=&#39;fa fa-edit&#39;&gt;&lt;/i&gt; icon on the
bottom-left of the screen to add the relevant R-code to &lt;em&gt;Report &amp;gt;
Rmd&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## load the original tibble from data/bbb.rds
bbb_file &amp;lt;- tempfile()
curl::curl_download(
  &amp;quot;https://www.dropbox.com/s/i6athvk5m4t822m/bbb.rds?dl=1&amp;quot;,
  destfile = bbb_file
)
bbb &amp;lt;- readr::read_rds(bbb_file)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;assessing-recency&#34;&gt;Assessing recency&lt;/h3&gt;
&lt;p&gt;Create a bar-plot using &lt;code&gt;buyer&lt;/code&gt; as the Y-variable and &lt;code&gt;last&lt;/code&gt; as the
X-variable.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;last&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;months since last purchase (last)&amp;quot;
  ),
  custom = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-2-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Plot a histogram of the &lt;code&gt;last&lt;/code&gt; variable (set plot type to
“distribution”)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(bbb, xvar = &amp;quot;last&amp;quot;, type = &amp;quot;dist&amp;quot;, custom = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-3-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;recency&lt;/code&gt; variable &lt;code&gt;rec_iq&lt;/code&gt; using the following command in
&lt;em&gt;Data &amp;gt; Transform &amp;gt; Create&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rec_iq = xtile(last, 5)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create recency quintiles
bbb &amp;lt;- mutate(bbb, rec_iq = xtile(last, 5))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is recency predictive of purchase? Are the best customers in quintile 1?
The graph below shows this is indeed the case.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;rec_iq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Recency quintiles (rec_iq)&amp;quot;
  ),
  custom = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-5-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;assessing-frequency&#34;&gt;Assessing frequency&lt;/h3&gt;
&lt;p&gt;The plot below shows that purchase probability is NOT highest in the 1st
quantile for frequency (&lt;code&gt;purch&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;purch&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;,
    x = &amp;quot;Purchase frequency (purch)&amp;quot;
  ),
  custom = FALSE
) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-6-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This means we need to &lt;em&gt;flip&lt;/em&gt; the bin numbers so the highest purchase
probability will bin in the 1st bin (quantile). The easiest way to do
this is to add &lt;code&gt;rev = TRUE&lt;/code&gt; in the call to &lt;code&gt;xtile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;freq_iq = xtile(purch, 5, rev = TRUE)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, you could use:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;freq_iq = 6L - xtile(purch, 5)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create frequency quintiles
bbb &amp;lt;- mutate(bbb, freq_iq = xtile(purch, 5, rev = TRUE))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is frequency predictive of purchase? Are the best customers in quintile
1? The graph below shows this is now indeed the case.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;freq_iq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Frequency quintiles (freq_iq)&amp;quot;
  ),
  custom = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-8-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Why are there only 4 values? Looking at the histogram below we see that
the distribution of &lt;code&gt;purch&lt;/code&gt; is heavily skewed (to the right). This makes
it difficult for the binning algorithm to create 5 &lt;em&gt;bins&lt;/em&gt; of similar
size&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(bbb, xvar = &amp;quot;purch&amp;quot;, color = &amp;quot;freq_iq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-9-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;assessing-monetary-value&#34;&gt;Assessing monetary value&lt;/h3&gt;
&lt;p&gt;The plot shows that purchase probability will NOT be highest in the 1st
monetary quantile (&lt;code&gt;total&lt;/code&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;total&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Monetary value (total)&amp;quot;
  ), 
  custom = TRUE
) + 
  theme(
    axis.ticks.x = element_blank(), 
    axis.text.x = element_blank()
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-10-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Plot a histogram of the &lt;code&gt;total&lt;/code&gt; variable&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(bbb, xvar = &amp;quot;total&amp;quot;, type = &amp;quot;dist&amp;quot;, custom = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-11-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Just like we did for &lt;code&gt;frequency&lt;/code&gt;, we have to &lt;em&gt;flip&lt;/em&gt; the bins so the
highest purchase probability is in the 1st quantile. The easiest way to
do this is to add &lt;code&gt;rev = TRUE&lt;/code&gt; in the call to &lt;code&gt;xtile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mon_iq = xtile(total, 5, rev = TRUE)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create monetary quintiles
bbb &amp;lt;- mutate(bbb, mon_iq = xtile(total, 5, rev = TRUE))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is monetary predictive of purchase? Are the best customers in quintile
1? The graph below shows this is now indeed the case.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;mon_iq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Monetary value quantiles (mon_iq)&amp;quot;
  ),
  custom = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-13-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;correlation-between-rfm-variables&#34;&gt;Correlation between RFM variables&lt;/h2&gt;
&lt;p&gt;What is the correlation between &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;total&lt;/code&gt;, and &lt;code&gt;purch&lt;/code&gt;?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- correlation(bbb, vars = c(&amp;quot;last&amp;quot;, &amp;quot;total&amp;quot;, &amp;quot;purch&amp;quot;))
summary(result)

Correlation
Data        : bbb 
Method      : Pearson 
Variables   : last, total, purch 
Null hyp.   : variables x and y are not correlated
Alt. hyp.   : variables x and y are correlated

Correlation matrix:
      last  total
total -0.00      
purch  0.01  0.52

p.values:
      last total
total 0.67      
purch 0.18 0.00 

plot(result, n = 1000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-14-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Create a new variable that captures the average amount spent per
purchase (&lt;code&gt;avg_total&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## calculate average spend
bbb &amp;lt;- mutate(bbb, avg_total = total / purch)

visualize(
  bbb,
  xvar = &amp;quot;purch&amp;quot;,
  yvar = &amp;quot;avg_total&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  custom = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-16-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;What is the correlation between &lt;code&gt;purch&lt;/code&gt; and &lt;code&gt;avg_total&lt;/code&gt;?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- correlation(
  bbb,
  vars = c(&amp;quot;last&amp;quot;, &amp;quot;total&amp;quot;, &amp;quot;purch&amp;quot;, &amp;quot;avg_total&amp;quot;)
)
summary(result)

Correlation
Data        : bbb 
Method      : Pearson 
Variables   : last, total, purch, avg_total 
Null hyp.   : variables x and y are not correlated
Alt. hyp.   : variables x and y are correlated

Correlation matrix:
          last  total purch
total     -0.00            
purch      0.01  0.52      
avg_total -0.01  0.21 -0.57

p.values:
          last total purch
total     0.67            
purch     0.18 0.00       
avg_total 0.05 0.00  0.00 

plot(result, n = 1000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-17-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;generate-rfm-index&#34;&gt;Generate RFM index&lt;/h2&gt;
&lt;p&gt;Use &lt;em&gt;Data &amp;gt; Transform &amp;gt; Create&lt;/em&gt; to generate the RFM index by
&lt;em&gt;pasting&lt;/em&gt; &lt;code&gt;rec_iq&lt;/code&gt;, &lt;code&gt;freq_iq&lt;/code&gt;, and &lt;code&gt;mon_iq&lt;/code&gt; together.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rfm_iq = paste0(rec_iq, freq_iq, mon_iq)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create new variable(s)
bbb &amp;lt;- mutate(bbb, rfm_iq = paste0(rec_iq, freq_iq, mon_iq))

visualize(
  bbb,
  xvar = &amp;quot;rfm_iq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyer = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Independent RFM index (rfm_iq)&amp;quot;
  ),
  custom = TRUE
) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-19-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;generate-sequential-quintiles&#34;&gt;Generate sequential quintiles&lt;/h2&gt;
&lt;p&gt;There is no need to do anything with &lt;code&gt;recency&lt;/code&gt; for a sequential
quintiles approach because &lt;code&gt;rec_iq&lt;/code&gt; is the same as &lt;code&gt;rec_sq&lt;/code&gt;. However, to
calculate &lt;code&gt;freq_sq&lt;/code&gt; we first need to group the data by &lt;code&gt;rec_iq&lt;/code&gt; before
applying the &lt;code&gt;xtile&lt;/code&gt; function. Subsequently, we need to group the data
by &lt;code&gt;rec_iq&lt;/code&gt; and &lt;code&gt;freq_sq&lt;/code&gt; before applying the &lt;code&gt;xtile&lt;/code&gt; function to
calculate &lt;code&gt;mon_sq&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## calculate sequential frequency quintiles
bbb &amp;lt;- group_by(bbb, rec_iq) %&amp;gt;%
  mutate(freq_sq = xtile(purch, 5, rev = TRUE)) %&amp;gt;%
  ungroup()

## calculate sequential monetary quintiles
bbb &amp;lt;- group_by(bbb, rec_iq, freq_sq) %&amp;gt;%
  mutate(mon_sq = xtile(total, 5, rev = TRUE)) %&amp;gt;%
  ungroup()

visualize(
  bbb,
  xvar = &amp;quot;freq_sq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Frequency quintiles (freq_sq)&amp;quot;
  ),
  custom = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-21-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;mon_sq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyers = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Monetary value quintiles (mon_sq)&amp;quot;
  ),
  custom = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-22-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;generate-sequential-rfm-index&#34;&gt;Generate Sequential RFM index&lt;/h2&gt;
&lt;p&gt;Use &lt;em&gt;Data &amp;gt; Transform &amp;gt; Create&lt;/em&gt; to generate the RFM index by
&lt;em&gt;pasting&lt;/em&gt; &lt;code&gt;rec_iq&lt;/code&gt;, &lt;code&gt;freq_sq&lt;/code&gt;, and &lt;code&gt;mon_sq&lt;/code&gt; together.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rfm_sq = paste0(rec_iq, freq_sq, mon_sq)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create new variable(s)
bbb &amp;lt;- mutate(bbb, rfm_sq = paste0(rec_iq, freq_sq, mon_sq))

visualize(
  bbb,
  xvar = &amp;quot;rfm_sq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyer = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Sequential RFM index (rfm_sq)&amp;quot;
  ), 
  custom = TRUE
) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-24-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;calculate-performance-metrics-without-targeting&#34;&gt;Calculate performance metrics without targeting&lt;/h2&gt;
&lt;h2 id=&#34;response-rate-without-rfm&#34;&gt;Response rate without RFM&lt;/h2&gt;
&lt;p&gt;We can use &lt;em&gt;Data &amp;gt; Explore&lt;/em&gt; to generate summary statistics for the
&lt;code&gt;buyer&lt;/code&gt; variable in the sample&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- explore(
  bbb,
  vars = &amp;quot;buyer&amp;quot;,
  fun = c(&amp;quot;n_obs&amp;quot;, &amp;quot;mean&amp;quot;)
)
summary(result, dec = 4)

Explore
Data        : bbb 
Functions   : n_obs, mean 
Top         : Function 

 variable  n_obs   mean
    buyer 50,000 0.0904
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some basic R-code is needed to to calculate performance metrics for BBB
when no targeting is used. We are now using R as a calculator.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;perc_mail &amp;lt;- 1
nr_mail &amp;lt;- 500000 * perc_mail
rep_rate &amp;lt;- mean(bbb$buyer == &amp;quot;yes&amp;quot;)
nr_resp &amp;lt;- nr_mail * rep_rate
mail_cost &amp;lt;- .5 * nr_mail
profit_nt &amp;lt;- (18 - 9 - 3) * nr_resp - mail_cost
ROME_nt &amp;lt;- profit_nt / mail_cost
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Without targeting BBB would mail all 500,000 remaining customers
(100.00%). The response rate is predicted to be 9.04% or 45,220 buyers.
The expected profit is $21,320. The mailing cost is estimated to be
$250,000 with a ROME of 8.53%&lt;/p&gt;
&lt;h2 id=&#34;calculate-performance-metrics-using-independent-rfm&#34;&gt;Calculate performance metrics using independent RFM&lt;/h2&gt;
&lt;h2 id=&#34;break-even-aggr&#34;&gt;Break-even (aggr)&lt;/h2&gt;
&lt;p&gt;We can calcule the break-even response rate as follows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.5 / (18 - 9 - 3) = 0.0833333&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The breakeven value is 8.3%. All cells above the breakeven line in the
plot below should be mailed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb,
  xvar = &amp;quot;rfm_iq&amp;quot;,
  yvar = &amp;quot;buyer&amp;quot;,
  type = &amp;quot;bar&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyer = &#39;yes&#39;&amp;quot;, 
    x = &amp;quot;Independent RFM index (rfm_iq)&amp;quot;
  ),
  custom = TRUE
) +
  geom_hline(yintercept = 0.083) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-27-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;response-rate-using-independent-quintiles&#34;&gt;Response rate using independent quintiles&lt;/h2&gt;
&lt;p&gt;Create the &lt;code&gt;mailto_iq&lt;/code&gt; variable for independent RFM making sure to
select the &lt;code&gt;rfm_iq&lt;/code&gt; variable so the estimates are generated for each
cell.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mailto_iq = mean(buyer == &amp;quot;yes&amp;quot;) &amp;gt; .083&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## mail TRUE or FALSE
bbb &amp;lt;- group_by(bbb, rfm_iq) %&amp;gt;%
  mutate(mailto_iq = mean(buyer == &amp;quot;yes&amp;quot;) &amp;gt; breakeven) %&amp;gt;%
  ungroup()

## also calculate response rate per group as an illustration
bbb &amp;lt;- group_by(bbb, rfm_iq) %&amp;gt;%
  mutate(rfm_iq_resp = mean(buyer == &amp;quot;yes&amp;quot;)) %&amp;gt;%
  ungroup()

result &amp;lt;- pivotr(
  bbb,
  cvars = &amp;quot;mailto_iq&amp;quot;,
  fun = &amp;quot;n_obs&amp;quot;,
  normalize = &amp;quot;total&amp;quot;
)
summary(result, dec = 2, perc = TRUE)

Pivot table
Data        : bbb 
Categorical : mailto_iq 
Normalize by: total 

 mailto_iq   n_obs
     FALSE  53.46%
      TRUE  46.54%
     Total 100.00%

result &amp;lt;- explore(
  bbb,
  vars = &amp;quot;buyer&amp;quot;,
  byvar = &amp;quot;mailto_iq&amp;quot;,
  fun = c(&amp;quot;n_obs&amp;quot;, &amp;quot;mean&amp;quot;)
)
summary(result, dec = 4)

Explore
Data        : bbb 
Grouped by  : mailto_iq 
Functions   : n_obs, mean 
Top         : Function 

 mailto_iq variable  n_obs   mean
     FALSE    buyer 26,732 0.0468
      TRUE    buyer 23,268 0.1405
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;calculate-profits-and-rome-for-independent-rfm&#34;&gt;Calculate profits and ROME for Independent RFM&lt;/h2&gt;
&lt;p&gt;Some basic R-code is again needed to to calculate performance metrics
for BBB when targeting using independent RFM. The only difference with
the calculations above is that we now also have calculate the percentage
of customers that will be mailed rather than setting equal to 100%.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;perc_mail &amp;lt;- mean(bbb$mailto_iq)
nr_mail &amp;lt;- 500000 * perc_mail
dat &amp;lt;- filter(bbb, mailto_iq == TRUE)
rep_rate &amp;lt;- mean(dat$buyer == &amp;quot;yes&amp;quot;)
nr_resp &amp;lt;- nr_mail * rep_rate
mail_cost &amp;lt;- .5 * nr_mail
profit_iq &amp;lt;- (18 - 9 - 3) * nr_resp - mail_cost
ROME_iq &amp;lt;- profit_iq / mail_cost
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Based on independent RFM the number of customers BBB should mail is
232,680 (46.54%). The response rate for the selected customers is
predicted to be 14.05% or 32,700 buyers. The expected profit is $79,860.
The mailing cost is estimated to be $116,340 with a ROME of 68.64%&lt;/p&gt;
&lt;h2 id=&#34;response-rate-using-sequential-quintiles&#34;&gt;Response rate using sequential quintiles&lt;/h2&gt;
&lt;p&gt;Create the &lt;code&gt;mailto_sq&lt;/code&gt; variable for sequential RFM making sure to select
the &lt;code&gt;rfm_sq&lt;/code&gt; variable so the estimates are generated for each cell.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mailto_sq = mean(buyer == &amp;quot;yes&amp;quot;) &amp;gt; .083&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## mail TRUE or FALSE
bbb &amp;lt;- group_by(bbb, rfm_sq) %&amp;gt;%
  mutate(mailto_sq = mean(buyer == &amp;quot;yes&amp;quot;) &amp;gt; breakeven) %&amp;gt;%
  ungroup()

## also calculate response rate per group as an illustration
bbb &amp;lt;- group_by(bbb, rfm_sq) %&amp;gt;%
  mutate(rfm_sq_resp = mean(buyer == &amp;quot;yes&amp;quot;)) %&amp;gt;%
  ungroup()

result &amp;lt;- pivotr(bbb, cvars = &amp;quot;mailto_sq&amp;quot;, fun = &amp;quot;n_obs&amp;quot;, normalize = &amp;quot;total&amp;quot;)
summary(result, dec = 2, perc = TRUE)

Pivot table
Data        : bbb 
Categorical : mailto_sq 
Normalize by: total 

 mailto_sq   n_obs
     FALSE  52.59%
      TRUE  47.41%
     Total 100.00%

result &amp;lt;- explore(
  bbb,
  vars = &amp;quot;buyer&amp;quot;,
  byvar = &amp;quot;mailto_sq&amp;quot;,
  fun = c(&amp;quot;n_obs&amp;quot;, &amp;quot;mean&amp;quot;)
)
summary(result, dec = 4)

Explore
Data        : bbb 
Grouped by  : mailto_sq 
Functions   : n_obs, mean 
Top         : Function 

 mailto_sq variable  n_obs   mean
     FALSE    buyer 26,297 0.0460
      TRUE    buyer 23,703 0.1397
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;calculate-profits-and-rome-using-sequential-rfm&#34;&gt;Calculate profits and ROME using Sequential RFM&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;perc_mail &amp;lt;- mean(bbb$mailto_sq)
nr_mail &amp;lt;- 500000 * perc_mail
dat &amp;lt;- filter(bbb, mailto_sq == TRUE)
rep_rate &amp;lt;- mean(dat$buyer == &amp;quot;yes&amp;quot;)
nr_resp &amp;lt;- nr_mail * rep_rate
mail_cost &amp;lt;- .5 * nr_mail
profit_sq &amp;lt;- (18 - 9 - 3) * nr_resp - mail_cost
ROME_sq &amp;lt;- profit_sq / mail_cost
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Based on sequential RFM the number of customers BBB should mail is
237,030 (47.41%). The response rate for the selected customers is
predicted to be 13.97% or 33,120 buyers. The expected profit is $80,205.
The mailing cost is estimated to be $118,515 with a ROME of 67.67%.&lt;/p&gt;
&lt;p&gt;Compare this to the main results from independent RFM. The expected
profit is $79,860. The mailing cost is estimated to be $118,515 with a
ROME of 68.64%&lt;/p&gt;
&lt;h2 id=&#34;extra-intuitive-groupings&#34;&gt;Extra: Intuitive groupings&lt;/h2&gt;
&lt;p&gt;Generate the RFM variables based on intuitive groupings.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create recency groups using case_when
bbb &amp;lt;- mutate(
  bbb,
  rec_ig = case_when(
    last &amp;lt;= 6 ~ 1, 
    last &amp;gt; 6 &amp;amp; last &amp;lt;= 12 ~ 2,
    last &amp;gt; 12 &amp;amp; last &amp;lt;= 18 ~ 3,
    last &amp;gt; 18 &amp;amp; last &amp;lt;= 24 ~ 4, 
    TRUE ~ 5
  )
)

## create frequency groups
bbb &amp;lt;- mutate(bbb, freq_ig = ifelse(purch == 1, 2, 1))

## create monetary groups
bbb &amp;lt;- mutate(bbb, mon_ig = ifelse(total &amp;lt; median(total), 2, 1))

## change all _iq variables to type {integer} using _Data &amp;gt; Transform &amp;gt; Change type_
bbb &amp;lt;- mutate_at(
  bbb,
  .vars = vars(rec_ig, freq_ig, mon_ig),
  .funs = as_integer
)

## create new variable(s)
bbb &amp;lt;- mutate(bbb, rfm_ig = paste0(rec_ig, freq_ig, mon_ig))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create the &lt;code&gt;mailto_ig&lt;/code&gt; variable for RFM based on intuitive groupings and
make sure to select the &lt;code&gt;rfm_ig&lt;/code&gt; variable so the estimates are generated
for each cell.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## mail TRUE or FALSE
bbb &amp;lt;- group_by(bbb, rfm_ig) %&amp;gt;%
  mutate(mailto_ig = mean(buyer == &amp;quot;yes&amp;quot;) &amp;gt; breakeven) %&amp;gt;%
  ungroup()

perc_mail &amp;lt;- mean(bbb$mailto_ig)
nr_mail &amp;lt;- 500000 * perc_mail
dat &amp;lt;- filter(bbb, mailto_ig == TRUE)
rep_rate &amp;lt;- mean(dat$buyer == &amp;quot;yes&amp;quot;)
nr_resp &amp;lt;- nr_mail * rep_rate
mail_cost &amp;lt;- .5 * nr_mail
profit_ig &amp;lt;- (18 - 9 - 3) * nr_resp - mail_cost
ROME_ig &amp;lt;- profit_ig / mail_cost
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Based on intuitively grouped RFM the number of customers BBB should mail
is 276,660 (55.33%). The response rate for the selected customers is
predicted to be 12.69% or 35,100 buyers. The expected profit is $72,270.
The mailing cost is estimated to be $138,330 with a ROME of 52.24%.&lt;/p&gt;
&lt;h2 id=&#34;extra-graphing-profit-and-rome-across-methods&#34;&gt;Extra: Graphing Profit and ROME across methods&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## make a tibble (data.frame) with results
dat &amp;lt;- tibble::tibble(
  name = c(&amp;quot;No targeting&amp;quot;, &amp;quot;Indep. RFM&amp;quot;, &amp;quot;Sequen. RFM&amp;quot;, &amp;quot;Intuit. RFM&amp;quot;),
  Profit = c(profit_nt, profit_iq, profit_sq, profit_ig),
  ROME = c(ROME_nt, ROME_iq, ROME_sq, ROME_ig)
) %&amp;gt;%
  mutate(name = factor(name, levels = name))

## plot campaign profit
visualize(
  dat, 
  xvar = &amp;quot;name&amp;quot;, 
  yvar = &amp;quot;Profit&amp;quot;, 
  type = &amp;quot;bar&amp;quot;, 
  labs = list(title = &amp;quot;Campaign profit&amp;quot;, x = &amp;quot;&amp;quot;),
  custom = TRUE
) +
  geom_text(aes(label = format_nr(Profit, dec = 0)), vjust = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-40-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## plot ROME
visualize(
  dat, 
  xvar = &amp;quot;name&amp;quot;, 
  yvar = &amp;quot;ROME&amp;quot;, 
  type = &amp;quot;bar&amp;quot;, 
  labs = list(title = &amp;quot;Return on Marketing Expenditures (ROME)&amp;quot;, x = &amp;quot;&amp;quot;),
  custom = TRUE
) +
  geom_text(aes(label = format_nr(ROME, dec = 2)), vjust = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-41-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;extra-refining-the-break-even-rule-with-prediction-precision-based-on-independent-quintiles&#34;&gt;Extra: Refining the break even rule with prediction precision based on Independent quintiles&lt;/h2&gt;
&lt;p&gt;We want to establish that the estimated response rates per RFM cell are
significantly larger than the break-even response rate. Lets start with
a test of the proportion of buyers in RFM group 111.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- single_prop(
  bbb,
  var = &amp;quot;buyer&amp;quot;,
  lev = &amp;quot;yes&amp;quot;,
  comp_value = 0.083,
  alternative = &amp;quot;greater&amp;quot;,
  data_filter = &amp;quot;rfm_iq == &#39;111&#39;&amp;quot;
)
summary(result)

Single proportion test (binomial exact)
Data      : bbb 
Filter    : rfm_iq == &#39;111&#39; 
Variable  : buyer 
Level     : yes in buyer 
Confidence: 0.95 
Null hyp. : the proportion of yes in buyer = 0.083 
Alt. hyp. : the proportion of yes in buyer &amp;gt; 0.083 

     p  ns     n n_missing    sd    se    me
 0.225 264 1,171         0 0.418 0.012 0.024

  diff  ns p.value    5%  100%    
 0.142 264  &amp;lt; .001 0.205 1.000 ***

Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The results show that we can reject &lt;em&gt;H&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt; in favor of the
alternative hypothesis that the proportion of buyers in this group in
the population will be above the break-even response rate.&lt;/p&gt;
&lt;p&gt;Recall that the “worst” cell we would still target was index 253 for
&lt;code&gt;rfm_iq&lt;/code&gt;. This group had a sample response rate of 0.085. The test below
shows that we cannot reject &lt;em&gt;H&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt; for this group.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- single_prop(
  bbb,
  var = &amp;quot;buyer&amp;quot;,
  lev = &amp;quot;yes&amp;quot;,
  comp_value = 0.083,
  alternative = &amp;quot;greater&amp;quot;,
  data_filter = &amp;quot;rfm_iq == &#39;253&#39;&amp;quot;
)
summary(result)

Single proportion test (binomial exact)
Data      : bbb 
Filter    : rfm_iq == &#39;253&#39; 
Variable  : buyer 
Level     : yes in buyer 
Confidence: 0.95 
Null hyp. : the proportion of yes in buyer = 0.083 
Alt. hyp. : the proportion of yes in buyer &amp;gt; 0.083 

     p ns   n n_missing    sd    se    me
 0.085 52 609         0 0.279 0.011 0.022

  diff ns p.value    5%  100%  
 0.002 52   0.436 0.067 1.000  

Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can generate the required inputs to calculate the lower-bound on the
response rate for each cell using &lt;em&gt;Data &amp;gt; Explore&lt;/em&gt; as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- explore(
  bbb,
  vars = &amp;quot;buyer&amp;quot;,
  byvar = &amp;quot;rfm_iq&amp;quot;,
  fun = c(&amp;quot;n_obs&amp;quot;, &amp;quot;prop&amp;quot;, &amp;quot;seprop&amp;quot;),
  nr = 95
)
dtab(result, dec = 4) %&amp;gt;% render()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-44-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bbb_lbiq &amp;lt;- result$tab
register(&amp;quot;bbb_lbiq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we can use &lt;em&gt;Data &amp;gt; Transform&lt;/em&gt; to calculate the lower-bound on
the response rate&lt;/p&gt;
&lt;p&gt;Put simply, the standard error of the sample mean is an estimate of how
far the sample mean is likely to be from the population mean, whereas
the standard deviation of the sample is the degree to which individuals
within the sample differ from the sample mean.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create lower-bound
bbb_lbiq &amp;lt;- mutate(bbb_lbiq, prop_lb = prop - 1.64 * seprop)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The figure below shows instances where the lower-bound of the confidence
interval around the response rate for a cell is below the break-even
cut-off point although the sample response rate is above the cut-off
point.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb_lbiq,
  xvar = &amp;quot;rfm_iq&amp;quot;,
  yvar = c(&amp;quot;prop&amp;quot;, &amp;quot;prop_lb&amp;quot;),
  comby = TRUE,
  type = &amp;quot;line&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyer = &#39;yes&#39;&amp;quot;,
    x = &amp;quot;Independent RFM index (rfm_iq)&amp;quot;,
    color = &amp;quot;&amp;quot;
  ),
  custom = TRUE
) +
  geom_hline(yintercept = 0.083) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-46-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;mailto_lbiq&lt;/code&gt; variable for independent RFM &lt;strong&gt;adjusting for
estimation accuracy&lt;/strong&gt; making sure to select the &lt;code&gt;rfm_iq&lt;/code&gt; variable so the
estimates are generated for each cell.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mailto_lbiq = (mean(buyer == &amp;quot;yes&amp;quot;) - 1.64 * seprop(buyer == &amp;quot;yes&amp;quot;)) &amp;gt; .083

## mail TRUE or FALSE
bbb &amp;lt;- group_by(bbb, rfm_iq) %&amp;gt;%
  mutate(mailto_lbiq = (mean(buyer == &amp;quot;yes&amp;quot;) - 1.64 * seprop(buyer == &amp;quot;yes&amp;quot;)) &amp;gt; 0.083) %&amp;gt;%
  ungroup()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The rest of the calculations are the same as before.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;perc_mail &amp;lt;- mean(bbb$mailto_lbiq)
nr_mail &amp;lt;- 500000 * perc_mail
dat &amp;lt;- filter(bbb, mailto_lbiq == TRUE)
rep_rate &amp;lt;- mean(dat$buyer == &amp;quot;yes&amp;quot;)
nr_resp &amp;lt;- nr_mail * rep_rate
mail_cost &amp;lt;- .5 * nr_mail
profit_lbiq &amp;lt;- (18 - 9 - 3) * nr_resp - mail_cost
ROME_lbiq &amp;lt;- profit_lbiq / mail_cost
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Based on independent RFM, after adjustment for prediction precision, the
number of customers BBB should mail is 183,940 (36.79%). The response
rate for the selected customers is predicted to be 15.30% or 28,150
buyers. The expected profit is $76,930. The mailing cost is estimated to
be $91,970 with a ROME of 83.65%.&lt;/p&gt;
&lt;h2 id=&#34;extra-refining-the-break-even-rule-with-prediction-precision-based-on-sequential-quintiles&#34;&gt;Extra: Refining the break even rule with prediction precision based on Sequential quintiles&lt;/h2&gt;
&lt;p&gt;We want to establish that the estimated response rates per RFM cell are
significantly larger than the break-even response rate. Lets start with
a test of the proportion of buyers in RFM group 111.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- single_prop(
  bbb,
  var = &amp;quot;buyer&amp;quot;,
  lev = &amp;quot;yes&amp;quot;,
  comp_value = 0.083,
  alternative = &amp;quot;greater&amp;quot;,
  data_filter = &amp;quot;rfm_sq == &#39;111&#39;&amp;quot;
)
summary(result)

Single proportion test (binomial exact)
Data      : bbb 
Filter    : rfm_sq == &#39;111&#39; 
Variable  : buyer 
Level     : yes in buyer 
Confidence: 0.95 
Null hyp. : the proportion of yes in buyer = 0.083 
Alt. hyp. : the proportion of yes in buyer &amp;gt; 0.083 

     p ns   n n_missing    sd    se    me
 0.245 88 359         0 0.430 0.023 0.044

  diff ns p.value    5%  100%    
 0.162 88  &amp;lt; .001 0.208 1.000 ***

Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The results show that we can reject &lt;em&gt;H&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt; in favor of the
alternative hypothesis that the proportion of buyers in this group in
the population will be above the break-even response rate.&lt;/p&gt;
&lt;p&gt;Recall that the “worst” groups we would still send to was index 323 for
&lt;code&gt;rfm_sq&lt;/code&gt;. This group had a sample response rate of 0.085. The test below
shows that we cannot reject &lt;em&gt;H&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt; for this group.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- single_prop(
  bbb,
  var = &amp;quot;buyer&amp;quot;,
  lev = &amp;quot;yes&amp;quot;,
  comp_value = 0.083,
  alternative = &amp;quot;greater&amp;quot;,
  data_filter = &amp;quot;rfm_sq == &#39;323&#39;&amp;quot;
)
summary(result)

Single proportion test (binomial exact)
Data      : bbb 
Filter    : rfm_sq == &#39;323&#39; 
Variable  : buyer 
Level     : yes in buyer 
Confidence: 0.95 
Null hyp. : the proportion of yes in buyer = 0.083 
Alt. hyp. : the proportion of yes in buyer &amp;gt; 0.083 

     p ns   n n_missing    sd    se    me
 0.085 42 493         0 0.279 0.013 0.025

  diff ns p.value    5%  100%  
 0.002 42   0.453 0.065 1.000  

Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can generate the required inputs to calculate the lower-bound on the
response rate for each cell using &lt;em&gt;Data &amp;gt; Explore&lt;/em&gt; as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result &amp;lt;- explore(
  bbb,
  vars = &amp;quot;buyer&amp;quot;,
  byvar = &amp;quot;rfm_sq&amp;quot;,
  fun = c(&amp;quot;n_obs&amp;quot;, &amp;quot;prop&amp;quot;, &amp;quot;seprop&amp;quot;),
  nr = 95
)
dtab(result, dec = 4) %&amp;gt;% render()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-51-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bbb_lbsq &amp;lt;- result$tab
register(&amp;quot;bbb_lbsq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we can use &lt;em&gt;Data &amp;gt; Transform&lt;/em&gt; to calculate the lower-bound on
the response rate&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## create lower-bound
bbb_lbsq &amp;lt;- mutate(bbb_lbsq, prop_lb = prop - 1.64 * seprop)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The figure below shows instances where the lower-bound of the confidence
interval around the response rate for a cell is below the break-even
cut-off point although the sample response rate is above the cut-off
point.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;visualize(
  bbb_lbsq,
  xvar = &amp;quot;rfm_sq&amp;quot;,
  yvar = c(&amp;quot;prop&amp;quot;, &amp;quot;prop_lb&amp;quot;),
  comby = TRUE,
  type = &amp;quot;line&amp;quot;,
  labs = list(
    y = &amp;quot;Proportion of buyer = &#39;yes&#39;&amp;quot;,
    x = &amp;quot;Sequential RFM index (rfm_sq)&amp;quot;,
    color = &amp;quot;&amp;quot;
  ),
  custom = TRUE
) +
  geom_hline(yintercept = 0.083) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;test_files/figure-markdown_strict/unnamed-chunk-53-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;mailto_lbsq&lt;/code&gt; variable for sequential RFM &lt;strong&gt;adjusting for
estimation accuracy&lt;/strong&gt; making sure to select the &lt;code&gt;rfm_sq&lt;/code&gt; variable so the
estimates are generated for each cell.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
